server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # Determine real scheme (trust Cloudflare tunnel's X-Forwarded-Proto)
    set $real_scheme $scheme;
    if ($http_x_forwarded_proto) {
        set $real_scheme $http_x_forwarded_proto;
    }

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # API proxy to backend
    location /api/ {
        proxy_pass http://changeorderino-api:8000/;
        proxy_http_version 1.1;

        # Preserve original host:port (critical for :3000)
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # Trust X-Forwarded-Proto from Cloudflare tunnel
        proxy_set_header X-Forwarded-Proto $real_scheme;

        # Rewrite upstream redirects to keep /api prefix AND preserve port
        # Match absolute URLs: http://upstream/v1/... → {real_scheme}://client-host:port/api/v1/...
        proxy_redirect ~^http://[^/]+/v1/(.*)$ $real_scheme://$http_host/api/v1/$1;
        # Match relative URLs: /v1/... → {real_scheme}://client-host:port/api/v1/...
        proxy_redirect ~^/v1/(.*)$ $real_scheme://$http_host/api/v1/$1;

        # WebSocket support
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # MinIO storage proxy (^~ prevents regex locations from matching)
    # Proxies /storage/path/to/file to http://minio:9000/changeorders/path/to/file
    location ^~ /storage/ {
        proxy_pass http://changeorderino-minio:9000/changeorders/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $real_scheme;

        # CORS headers for assets
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
        add_header Access-Control-Allow-Headers "Range, Content-Type";

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Handle React Router (SPA)
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Cache static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Don't cache index.html
    location = /index.html {
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
        expires off;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}
