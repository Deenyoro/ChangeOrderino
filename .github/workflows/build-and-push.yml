name: Build and Push Docker Images to GHCR

on:
  push:
    branches: [ master, main ]
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      push_images:
        description: 'Push images to GHCR'
        required: true
        default: 'true'
        type: choice
        options:
        - 'true'
        - 'false'

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ${{ github.repository_owner }}/changeorderino

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        service:
          - name: api
            context: ./services/api
            build_args: ""
          - name: frontend
            context: ./services/frontend
            build_args: |
              VITE_API_URL=/api
              VITE_AUTH_ENABLED=true
              VITE_KEYCLOAK_URL=https://localhost:8443
              VITE_KEYCLOAK_REALM=changeorderino
              VITE_KEYCLOAK_CLIENT_ID=changeorderino-app
            tags_suffix: ""
          - name: frontend-noauth
            context: ./services/frontend
            image_name: frontend
            build_args: |
              VITE_API_URL=/api
              VITE_AUTH_ENABLED=false
              VITE_KEYCLOAK_URL=https://localhost:8443
              VITE_KEYCLOAK_REALM=changeorderino
              VITE_KEYCLOAK_CLIENT_ID=changeorderino-app
            tags_suffix: "-noauth"
          - name: email-service
            context: ./services/email-service
            build_args: ""

    steps:
    - name: Checkout repository
      uses: actions/checkout@v5

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels)
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-${{ matrix.service.image_name || matrix.service.name }}
        tags: |
          type=ref,event=branch,suffix=${{ matrix.service.tags_suffix || '' }}
          type=ref,event=pr,suffix=${{ matrix.service.tags_suffix || '' }}
          type=semver,pattern={{version}},suffix=${{ matrix.service.tags_suffix || '' }}
          type=semver,pattern={{major}}.{{minor}},suffix=${{ matrix.service.tags_suffix || '' }}
          type=sha,prefix={{branch}}-,suffix=${{ matrix.service.tags_suffix || '' }}
          type=raw,value=latest${{ matrix.service.tags_suffix || '' }},enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: ${{ matrix.service.context }}
        file: ${{ matrix.service.context }}/Dockerfile
        push: ${{ github.event_name != 'pull_request' && (github.event.inputs.push_images == 'true' || github.event.inputs.push_images == '') }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          GIT_COMMIT=${{ github.sha }}
          ${{ matrix.service.build_args }}
        cache-from: type=gha,scope=${{ matrix.service.name }}
        cache-to: type=gha,mode=max,scope=${{ matrix.service.name }}
        platforms: linux/amd64

  summary:
    needs: [build-and-push]
    runs-on: ubuntu-latest
    if: always()

    steps:
    - name: Build Summary
      run: |
        echo "## 🐳 Docker Images Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

        if [ "${{ needs.build-and-push.result }}" == "success" ]; then
          echo "✅ All Docker images built and pushed successfully!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📦 Images Available on GHCR:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- \`ghcr.io/${{ github.repository_owner }}/changeorderino-api:latest\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`ghcr.io/${{ github.repository_owner }}/changeorderino-frontend:latest\` (with Auth)" >> $GITHUB_STEP_SUMMARY
          echo "- \`ghcr.io/${{ github.repository_owner }}/changeorderino-frontend:latest-noauth\` (No Auth)" >> $GITHUB_STEP_SUMMARY
          echo "- \`ghcr.io/${{ github.repository_owner }}/changeorderino-email-service:latest\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🚀 Quick Start:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "# Pull pre-built images" >> $GITHUB_STEP_SUMMARY
          echo "docker compose pull" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "# Start services" >> $GITHUB_STEP_SUMMARY
          echo "docker compose up -d" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📝 Notes:" >> $GITHUB_STEP_SUMMARY
          echo "- Images are public and can be pulled without authentication" >> $GITHUB_STEP_SUMMARY
          echo "- View packages at: https://github.com/${{ github.repository_owner }}?tab=packages" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ Build failed. Check the logs for details." >> $GITHUB_STEP_SUMMARY
        fi
